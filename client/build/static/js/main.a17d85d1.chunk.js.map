{"version":3,"sources":["utils/img/portrait.jpg","components/Card/index.js","components/Grid/index.js","pages/About.js","components/VertCard/index.js","pages/Portfolio.js","components/Sidebar/index.js","components/Navbar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","props","react_default","a","createElement","className","title","src","img","alt","children","Container","_ref","fluid","items","concat","Row","_ref2","About","components_Card","Selfie","Component","VertCard","image","summary","href","githubLink","projectLink","Portfolio","state","projects","this","map","components_VertCard","key","id","Sidebar","closeSidebar","closeSide","data-toggle","aria-expanded","linkOne","email","linkTwo","github","linkThree","linkedIn","linkFour","resume","Navbar","type","onClick","dataToggle","data-target","dataTargetID","App","sidebarButton","activeSidebar","event","preventDefault","_this","setState","react_router_dom","components_Sidebar","components_Navbar","react_router","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a17d85d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/portrait.d8dde6f9.jpg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"col s12 m6\">\n      <h2 className=\"header white-text\">{props.title}</h2>\n      <div className=\"horizontal z-depth-2\">\n        <div className=\"card-image\">\n          <img className=\"card-image\" src={props.img} alt={props.title} />\n          </div>  \n          <div className=\"card-stacked\">\n            <div className=\"card-content\">\n              {props.children}\n            </div>\n          </div>\n        </div>\n      </div>\n      );\n    }\n    \n    export default Card;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children, items }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"} ${items}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Card from \"../components/Card\";\nimport { Container } from \"../components/Grid\";\nimport Selfie from \"../utils/img/portrait.jpg\";\nimport \"./style.css\";\n\nclass About extends Component {\n\n  // Handles updating component state when the user types into the input field\n\n  render() {\n    return (\n      <Container>\n            <Card \n              img={Selfie}\n            >\n              <p className=\"text\">\n              Welcome to my profile page. My name is Raymond He and I am a full stack developer currently looking for\n              a front end or back end developer position. I have completed my full stack web development course and\n              I am eager learn more about software development.\n                  <br />\n                  My current skill set involves HTML5, CSS3, JavaScript, jQuery, Bootstrap, Node.js, MySQL, MongoDB,\n                  Express, React.js, Git, and Firebase.\n                  <br />\n                  My current project involves learning Java for a stronger back-end language.\n                  <br />\n                  Feel free to reach out to me on my contact page if you know of any opportunities in software development.\n                  </p>\n       </Card>\n      </Container>\n    );\n  }\n}\n\nexport default About;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction VertCard(props) {\n  return (\n    <div className=\"card\">\n      <img src={props.image} className=\"card-img-top\" alt={props.title} />\n      <div className=\"card-body\">\n        <h5 className=\"card-title title-style\">{props.title}</h5>\n        <p className=\"card-text\">{props.summary}</p>\n        <div className=\"button-ori\">\n        <a href={props.githubLink} className=\"btn btn-primary\">Github Link</a>\n        <a href={props.projectLink} className=\"btn btn-primary\">Project Link</a>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default VertCard;\n","import React, { Component } from \"react\";\nimport VertCard from \"../components/VertCard\";\nimport {Container, Row} from \"../components/Grid\";\nimport projects from \"../utils/projects.json\";\nimport \"./portfolioStyle.css\";\n\nclass Portfolio extends Component {\n\n    state={\n        projects\n    }\n  // Handles updating component state when the user types into the input field\n\n  render() {\n    return (\n      <Container>\n        <Row>\n      {this.state.projects.map(projects => (\n          <VertCard\n            key={projects.id}\n            image={projects.image}\n            title={projects.title}\n            summary={projects.summary}\n            githubLink={projects.githubLink}\n            projectLink={projects.projectLink}\n          ></VertCard>\n      ))}\n      </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nfunction Sidebar(props) {\n    const closeSidebar = props.closeSide ? \"active\" : \"not-active\";\n    return (\n        <div className=\"wrapper mr0\">\n            <nav id=\"sidebar\" className={closeSidebar}>\n                <div className=\"sidebar-header\">\n                    <h3>{props.title}</h3>\n                </div>\n                <ul className=\"list-unstyled components\">\n                    <p>Dummy Heading</p>\n                    <li>\n                        <a href=\"/\">About</a>\n                    </li>\n                    <li>\n                        <a href=\"/portfolio\">Portfolio</a>\n                    </li>\n                    <li>\n                        <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\">Contact</a>\n                        <ul className=\"collapse list-unstyled\" id=\"pageSubmenu\">\n                            <li>\n                                <a href={props.linkOne}>{props.email}</a>\n                            </li>\n                            <li>\n                                <a href={props.linkTwo}>{props.github}</a>\n                            </li>\n                            <li>\n                                <a href={props.linkThree}>{props.linkedIn}</a>\n                            </li>\n                            <li>\n                                <a href={props.linkFour}>{props.resume}</a>\n                            </li>\n                        </ul>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    )\n};\n\nexport default Sidebar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n\n  return (\n    <div id=\"content\">\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <div className=\"container-fluid\">\n        <div className=\"align-content-center\">\n            <button type=\"button\" className=\"btn btn-dark btn-outline-light\"  \n            onClick={props.onClick} \n            data-toggle={props.dataToggle} \n            data-target={props.dataTargetID}>\n              {props.title}</button>\n        </div>\n        </div>\n      </nav>\n    </div>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport About from \"./pages/About\";\nimport Portfolio from \"./pages/Portfolio\"\nimport Sidebar from \"./components/Sidebar\";\nimport Navbar from \"./components/Navbar\";\n\nclass App extends Component {\n\n  state = {\n    sidebarButton: false\n  };\n\n  componentDidMount() {\n  }\n  activeSidebar = (event) => {\n    event.preventDefault();\n    this.state.sidebarButton === true ? this.setState({ sidebarButton: false })\n      :\n      this.setState({ sidebarButton: true })\n  };\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <div>\n            <Sidebar\n              title=\"Raymond He\"\n              email=\"Email\"\n              github=\"Github\"\n              linkedIn=\"LinkedIn\"\n              resume=\"Resume\"\n              linkOne=\"mailto:rayhe921@gmail.com\"\n              linkTwo=\"https://github.com/rayhe921\"\n              linkThree=\"https://www.linkedin.com/in/raymond-he-7086545a\"\n              linkFour=\"https://drive.google.com/file/d/1JUPCPCCRIVjmAfSGsqsHot-cjqi9ZTSb/view?usp=sharing\"\n              closeSide={this.state.sidebarButton}\n            ></Sidebar>\n          </div>\n          <div className=\"content col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2\">\n            <Navbar\n              onClick={this.activeSidebar}\n              title=\"Toggle Menu\"\n            ></Navbar>\n            <Switch>\n              <Route exact path=\"/\" component={About} />\n              <Route exact path=\"/portfolio\" component={Portfolio} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}